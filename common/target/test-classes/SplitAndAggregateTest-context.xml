<?xml version="1.0" encoding="UTF-8"?>
<!-- tag::example[] -->
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:camel="http://camel.apache.org/schema/spring" xmlns:context="http://www.springframework.org/schema/context"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd        http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd     ">
  <bean class="org.apache.commons.dbcp.BasicDataSource"
    destroy-method="close" id="sdpqDataSource">
    <property name="driverClassName" value="${sdpq.jdbc.driverClassName}" />
    <property name="url" value="${sdpq.jdbc.url}" />
    <property name="username" value="${sdpq.jdbc.username}" />
    <property name="password" value="${sdpq.jdbc.password}" />
  </bean>
  <bean class="gov.cdc.sdp.cbr.PhinMSTransformer" id="myProcessor" />
  <bean class="gov.cdc.sdp.cbr.JSONTransformer" id="jsonTransformer" />
  <bean class="gov.cdc.sdp.cbr.ArrayListAggregationStrategy" id="agg" />
  <bean class="gov.cdc.sdp.cbr.HTTP4Transformer" id="httpTransformer" />
  <bean
    class="org.apache.camel.spring.spi.BridgePropertyPlaceholderConfigurer"
    id="bridgePropertyPlaceholder">
    <property name="location" value="classpath:application.properties" />
  </bean>
  <camelContext id="camel" xmlns="http://camel.apache.org/schema/spring">
    <dataFormats>
      <hl7 id="unvalidatedHl7" validate="false" />
    </dataFormats>
    <onException>
      <exception>java.lang.Exception</exception>
      <handled>
        <constant>false</constant>
      </handled>
      <to id="_to_mock" uri="mock:error" />
    </onException>
    <route id="PHINMS">
      <from id="cbr_phinms" uri="direct:start" />
      <camel:process id="setHeaders" ref="myProcessor" />
      <camel:choice id="_choice1">
        <camel:when id="_when1">
          <camel:simple>body.trim().startsWith("FHS")</camel:simple>
          <camel:split id="batchSplitter"
            parallelProcessing="false" strategyRef="agg">
            <camel:method beanType="gov.cdc.sdp.cbr.HL7V2BatchSplitter"
              method="split" trim="false" />
            <to id="_to1" uri="direct:error" />
          </camel:split>
        </camel:when>
      </camel:choice>
      <setHeader headerName="errorMsg" id="_setHeader1">
        <simple>${in.header.ERROR_COUNT} of ${in.header.MSG_COUNT} messages failed.</simple>
      </setHeader>
      <to id="_to2" uri="mock:endpoint" />
    </route>
    <route id="_route1">
      <from id="_from1" uri="direct:error" />
      <setHeader headerName="HL7Filter" id="_setHeader7">
        <constant>*(/.MSH-21(*)-1 EQUALS FDD_MMG_V1.0)</constant>
      </setHeader>
      <unmarshal id="_unmarshal1" ref="unvalidatedHl7" />
      <filter id="foodNetFilter">
        <method beanType="gov.cdc.sdp.cbr.filter.HL7Terser" method="filter" />
        <marshal id="_marshal1" ref="unvalidatedHl7" />
        <to id="_to_the_ether2" uri="aphl-s3://there_is_no_S3_here" />
      </filter>
      <to id="_to3" uri="mock:split" />
    </route>
  </camelContext>
</beans>
<!-- end::example[] -->
