#spring.main.sources=org.mycompany

logging.config=classpath:logback.xml

# the options from org.apache.camel.spring.boot.CamelConfigurationProperties can be configured here
camel.springboot.name=SDP-CBR

# lets listen on all ports to ensure we can be invoked from the pod IP
server.address=0.0.0.0
management.address=0.0.0.0

# lets use a different management port in case you need to listen to HTTP requests on 8080
management.port=8081

# disable all management endpoints except health
endpoints.enabled = false
endpoints.health.enabled = true

# disable all management endpoints except health
endpoints.enabled = false
endpoints.health.enabled = true

sdpq.jdbc.driverClassName=org.postgresql.Driver
sdpq.jdbc.url=jdbc:postgresql://localhost:5432/cbr_db
sdpq.jdbc.username=sdp_dbq
sdpq.jdbc.password=bob

sdplog.jdbc.driverClassName=org.postgresql.Driver
sdplog.jdbc.url=jdbc:postgresql://localhost:5432/cbr_db
sdplog.jdbc.username=sdp_dbq
sdplog.jdbc.password=bob

phinms.jdbc.driverClassName=org.postgresql.Driver
phinms.jdbc.url=jdbc:postgresql://localhost:5432/cbr_db
phinms.jdbc.username=sdp_dbq
phinms.jdbc.password=bob

phinms.table=message_inq
phinms.service=MVPS
phinms.sql=select * from ${phinms.table} where applicationStatus is NULL and processingStatus = 'queued'?dataSource=phinMsDataSource&onConsume=update ${phinms.table} set applicationStatus='completed' where recordId=:#recordId&onConsumeFailed=update message_inq set applicationStatus='failed' where recordId=:#recordId

aims.bucketName=tradingpartners-east.sandbox.aimsplatform.com
aims.AccessKey=accessKey1
aims.SecretAccessKey=verySecretKey1
aims.S3Url=http://127.0.0.1:8001
aims.url=tradingpartners-east.sandbox.aimsplatform.com?amazonS3Endpoint=http://127.0.0.1:8001&accessKey=accessKey1&secretKey=verySecretKey1
aims.url2=${aims.bucketName}?amazonS3Endpoint=${aims.S3Url}&accessKey=${aims.accessKey}&secretKey=${aims.SecretAccessKey}
aims.SQSUrl=
aims.SQSNotificationURL=

email.uri=smtp://mail.mitre.org?
email.debugMode=debugMode=true
email.to=cbr_errors@cdc.gov
email.from=cdcsdp@cdc.gov
email.subject=SDP-CBR Error
email.default_body=An error has occurred.\n\n 

# Keeps the application alive
camel.springboot.main-run-controller=true

# The name of the service hosting the ActiveMQ broker or message gateway
# Can be customized using the 'ACTIVEMQ_SERVICE_NAME' variable to use a different broker.
activemq.service.name=activemq

# The following properties can be customized using the 'ACTIVEMQ_SERVICE_HOST' and 'ACTIVEMQ_SERVICE_PORT' environment variables.
# This is indeed done automatically by Kubernetes when the application is deployed in a namespace containing an instance of ActiveMQ named 'activemq'.
# The service defaults to localhost. You need to change these properties for development purposes only.
activemq.service.host=127.0.0.1
activemq.service.port=61616


# The following property binds all previous configurations together
activemq.broker.url=tcp://${${activemq.service.name}.service.host}:${${activemq.service.name}.service.port}

# Set the number of concurrent consumers for the ActiveMQ ('ACTIVEMQ_CONCURRENT_CONSUMERS')
activemq.concurrent.consumers=10

# Set the number of connections created by the connection pool ('ACTIVEMQ_POOL_MAX_CONNECTIONS')
activemq.pool.max.connections=8

# If required, you can set the broker credentials using environment variables.
# Variable names are 'ACTIVEMQ_BROKER_USERNAME' and 'ACTIVEMQ_BROKER_PASSWORD'.
# The following credentials are valid for Arquillian tests (see 'src/test/resources/amq.json').
activemq.broker.username=theuser
activemq.broker.password=Thepassword1!