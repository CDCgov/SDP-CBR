<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:camel="http://camel.apache.org/schema/spring" xmlns:context="http://www.springframework.org/schema/context"
  xmlns:jee="http://www.springframework.org/schema/jee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd                                http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd                        ">
  <!-- START SNIPPET: e1 -->
  <!-- repository for the idempotent consumer -->
  <bean
    class="org.apache.camel.processor.idempotent.MemoryIdempotentRepository"
    id="nndssIDRepo" />
  <bean class="gov.cdc.sdp.cbr.aphl.AIMSHeaderProcessor" id="aimsHeaderProcessor" />
  <!-- Define a traditional camel context here -->
  <camelContext id="camel" trace="false"
    xmlns="http://camel.apache.org/schema/spring">
    <propertyPlaceholder id="properties" location="application.properties" />
    <route id="aphls3_test_route">
      <from id="from_test" uri="direct:aphls3" />
      <doTry id="_doTry">
        <to id="_to_s3" uri="aphl-s3://{{aims.url}}" />
        <to id="_to_mock" uri="mock:foo" />
        <doCatch id="_doCatch2">
          <exception>java.lang.Exception</exception>
          <log id="_log1" message="EXCEPTION \n ${exception.stacktrace}" />
        </doCatch>
      </doTry>
    </route>
  </camelContext>
</beans>
